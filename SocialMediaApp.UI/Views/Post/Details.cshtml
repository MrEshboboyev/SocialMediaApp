@model PostDetailsVM

<div class="container mt-5">
    <!-- Post Details -->
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-info text-white d-flex justify-content-between align-items-center">
            <h4>@Model.Post.OwnerName</h4>
            <small class="text-muted">@Model.Post.CreatedAt.ToString("MMMM dd, yyyy hh:mm tt")</small>
        </div>
        <div class="card-body">
            <p>@Model.Post.Content</p>
        </div>
        <div class="card-footer d-flex justify-content-between align-items-center">
            <!-- Like Button and Like Count -->
            <div>
                <a asp-action="Like" asp-route-postId="@Model.Post.Id" class="btn btn-outline-success btn-sm">
                    <i class="bi bi-hand-thumbs-up"></i> Like
                </a>
                <span class="badge bg-success ms-2" style="font-size: 1rem;">
                    <i class="bi bi-hand-thumbs-up-fill"></i> @Model.Post.Likes.Count
                </span>
            </div>
        </div>
    </div>

    <!-- Comments Section -->
    <div class="card shadow-sm">
        <div class="card-header bg-secondary text-white">
            <h5>Comments</h5>
        </div>
        <div class="card-body">
            @foreach (var comment in Model.Comments)
            {
                <div id="comment-@comment.Id">
                    @Html.Partial("_CommentPartial", comment)
                </div>
            }
        </div>
    </div>

    <!-- Add a Comment Section -->
    <div class="mt-4">
        @Html.Partial("_CreateCommentPartial", new CommentDTO { PostId = Model.Post.Id })
    </div>
</div>

@section Scripts {
    <script>
        // Function to load the edit form when "Edit" is clicked
        function loadEditForm(commentId) {
            // Hide the regular comment content
            $('#comment-content-' + commentId).hide();
            // Show the edit form for the comment
            $('#edit-comment-form-' + commentId).show();
        }

        // Function to cancel editing and revert back to the original comment view
        function cancelEdit(commentId) {
            // Hide the edit form
            $('#edit-comment-form-' + commentId).hide();
            // Show the regular comment content again
            $('#comment-content-' + commentId).show();
        }

        // Function to handle the comment edit form submission
        function submitEditForm(commentId) {
            var formData = $('#editForm-' + commentId).serialize(); // Serialize the form data

            $.post('@Url.Action("Update", "Comment")', formData, function(response) {
                if (response.success) {
                    location.reload();  // Reload the page to reflect the updated comment, or you can dynamically update the comment content
                } else {
                    alert('Error updating comment.');
                }
            });
        }

        // Function to confirm delete
        function confirmDelete(commentId) {
            if (confirm('Are you sure you want to delete this comment?')) {
                $.post('@Url.Action("Delete", "Comment")', { commentId: commentId }, function(response) {
                    if (response.success) {
                        $('#comment-block-' + commentId).remove();  // Remove the deleted comment from the DOM
                    } else {
                        alert('Error deleting comment.');
                    }
                });
            }
        }
    </script>
}
